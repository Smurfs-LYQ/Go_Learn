package placeDemo

import "fmt"

// One 位运算符
func One() {
	// & 参与运算的两数各对应的二进位相与 (两个均为1才为1)
	/*
		13: 00001101
		 7: 00000111
		&后:00000101 = 5
	*/
	fmt.Printf("%d & %d : %d \n", 13, 7, 13&7)

	// | 参与运算的两数个对应的二进制相或 (两个有一个为1就为1)
	/*
		13: 00001101
		 7: 00000111
		|后:00001111 = 15
	*/
	fmt.Printf("%d | %d : %d \n", 13, 7, 13|7)

	// ^ 参与运算的两数各对应的二进制位相异或，当两对应的二进制位相异时，结果为1(两位不一样则为1)
	/*
		13: 00001101
		 7: 00000111
		^后:00001010
	*/
	fmt.Printf("%d ^ %d : %d\n", 13, 7, 13^7)

	// << 左移n位就是乘以2的n次方 ("a << b"是把a的各二进制位全部左移b位，高位丢弃，低位补0)
	/*
		一:
			2:	00000010
			<<后:00010000
		二:
			2 * (2*2*2)
	*/
	fmt.Printf("%d << %d : %d\n", 2, 3, 2<<3)

	// >> 右移n位就是除以2的n次方 ("a >> b"是把a的各二进制位全部右移b位)
	/*
		一:
			16:	00010000
			<<后:00000010
		二:
			16 / (2*2*2)
	*/
	fmt.Printf("%d >> %d : %d\n", 16, 3, 16>>3)
}
